<html>
  <head>
  </head>

  <body>
    <div class="container">
      <div class="bg-image">

      <div class="form-box options" data-controller="options">
        <ul id="booking-option" class="list-unstyled d-flex align-items-center" >
          <li  data-action="click->options#toggle" data-option="train">Train</li>
          <li  data-action="click->options#toggle" data-option="flight">Flight</li>
          <li  data-action="click->options#toggle" data-option="hotel">Hotel</li>
        </ul>
         <%= simple_form_for(@travel_preference, url: travel_preferences_path, method: :post) do |f| %>
          <div id="train-form" data-options-target="train">
            <p> this is train form </p>
            <%= render partial: 'shared/form', locals: { f: f } %>
          </div>

          <div id="flight-form" data-options-target="flight" style="display: none;">
            <p> this is flight form </p>
            <%= render partial: 'shared/form', locals: { f: f } %>
          </div>

          <div id="hotel-form" data-options-target="hotel" style="display: none;">
            <p> this is hotel form </p>
            <%= render partial: 'shared/form', locals: { f: f } %>
          </div>
        <% end %>
        </div>
      </div>
    </div>

    <!-- Include jQuery library -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <script>
      $(document).ready(function() {
        // Listen for form submission
        $('#travel-preference-form').on('submit', function(event) {
          event.preventDefault(); // Prevent the default form submission

          // Serialize the form data
          var formData = $(this).serialize();

          // Send an AJAX request to the backend
          $.ajax({
            url: $(this).attr('action'),
            type: $(this).attr('method'),
            data: formData,
            dataType: 'json', // Set the expected response data type as JSON
            success: function(response) {
              // Update the results section with the received data
              updateResults(response.data);
            },
            error: function(xhr, status, error) {
              // Handle error
              console.error(error);
            }
          });
        });

        // Function to update the results section
        function updateResults(data) {
          var resultsSection = $('#results-section');

          // Clear previous results
          resultsSection.empty();

          if (data.length > 0) {
            // Iterate over the data and append it to the results section
            data.forEach(function(item) {
              var resultItem = $('<p>').text('Item: ' + JSON.stringify(item));
              resultsSection.append(resultItem);
            });
          } else {
            // Display a message if no results available
            var noResultsMessage = $('<p>').text('No results available.');
            resultsSection.append(noResultsMessage);
          }
        }
      });
    </script>
  </body>
</html>